{
  "name": "markdown-copilot",
  "displayName": "Markdown Copilot",
  "description": "%extension.description%",
  "icon": "images/icon-128x128.png",
  "version": "0.3.0",
  "publisher": "kurusugawa-computer",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kurusugawa-computer/markdown-copilot-vscode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kurusugawa-computer/markdown-copilot-vscode"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Education",
    "Other"
  ],
  "keywords": [
    "markdown"
  ],
  "activationEvents": [
    "onLanguage:markdown"
  ],
  "main": "./dist/extension.js",
  "browser": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "markdown.copilot.editing.nameAndSaveAs",
        "title": "%command.editing.nameAndSaveAs.title%",
        "icon": "$(milestone)",
        "enablement": "true"
      },
      {
        "command": "markdown.copilot.editing.titleActiveContext",
        "title": "%command.editing.titleActiveContext.title%",
        "icon": "$(milestone)",
        "enablement": "editorLangId == markdown"
      },
      {
        "command": "markdown.copilot.editing.continueInContext",
        "title": "%command.editing.continueInContext.title%",
        "icon": "$(comment-discussion)",
        "enablement": "editorLangId == markdown && editorHasSelection"
      },
      {
        "command": "markdown.copilot.editing.continueWithoutContext",
        "title": "%command.editing.continueWithoutContext.title%",
        "icon": "$(comment-discussion)",
        "enablement": "editorLangId == markdown && editorHasSelection"
      },
      {
        "command": "markdown.copilot.editing.indentQuote",
        "title": "%command.editing.indentQuote.title%",
        "icon": "$(arrow-small-right)",
        "enablement": "editorLangId == markdown && editorHasSelection"
      },
      {
        "command": "markdown.copilot.editing.outdentQuote",
        "title": "%command.editing.outdentQuote.title%",
        "icon": "$(arrow-small-left)",
        "enablement": "editorLangId == markdown && editorHasSelection"
      },
      {
        "command": "markdown.copilot.editing.applyFilePathDiff",
        "title": "%command.editing.applyFilePathDiff.title%",
        "icon": "$(comment-discussion)",
        "enablement": "editorLangId == markdown && editorHasSelection"
      },
      {
        "command": "markdown.copilot.editing.listFilePathDiff",
        "title": "%command.editing.listFilePathDiff.title%",
        "icon": "$(comment-discussion)",
        "enablement": "explorerResourceIsFolder"
      }
    ],
    "menus": {
      "explorer/context": [{
        "when": "explorerResourceIsFolder",
        "command": "markdown.copilot.editing.listFilePathDiff"
      }]
    },
    "configuration": {
      "title": "Markdown Copilot",
      "properties": {
        "markdown.copilot.decorations.inactiveContextOpacity": {
          "type": "number",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "markdownDescription": "%config.decorations.inactiveContextOpacity.description%"
        },
        "markdown.copilot.instructions.nameMessage": {
          "type": "string",
          "default": "Provide a filename that summarizes the main topic of given content, using the same language as the content. The filename must be concise, not contain any invalid filename characters, not contain any extensions, only return the filename in JSON with the following format `{\"filepath\":\"${namePathFormat}\"}`.",
          "editPresentation": "multilineText",
          "markdownDescription": "%config.instructions.nameMessage.description%"
        },
        "markdown.copilot.instructions.namePathFormat": {
          "type": "string",
          "default": "memo/${date:yyyy-MM-dd}/${filename}.md",
          "markdownDescription": "%config.instructions.namePathFormat.description%"
        },
        "markdown.copilot.instructions.systemMessage": {
          "type": "string",
          "default": "You are Markdown Copilot, an expert assistant dedicated to helping the user solve tasks by:\n- Providing clear and concise responses to questions and requests.\n- Offering step-by-step instructions with examples for complex concepts or procedures.\n- Engaging interactively, seeking feedback to questions, and tailoring support to user needs.\n- Utilizing structured formats such as code, pseudocode, JSON, Markdown tables, logical operators, or mathematical expressions to reduce ambiguity and improve clarity.\n- Utilizing VSCode Markdown syntax for enhanced readability.\n- Enclosing code snippets in ` ` ` and blocks in ` ``` ` or `~~~` but only use when necessary.\n- Enclosing inline mathematical expressions in single dollar signs `$...$`, and block expressions in double dollar signs `$$...$$`.",
          "editPresentation": "multilineText",
          "markdownDescription": "%config.instructions.systemMessage.description%"
        },
        "markdown.copilot.instructions.titleMessage": {
          "type": "string",
          "default": "Provide a title that summarizes the main topic of the conversation up to this point, using the same language as the conversation. The title should be concise, complete in one line, and outputted without any quotes or additional explanations.",
          "editPresentation": "multilineText",
          "markdownDescription": "%config.instructions.titleMessage.description%"
        },
        "markdown.copilot.openAI.apiKey": {
          "type": "string",
          "default": "",
          "markdownDescription": "%config.openAI.apiKey.description%"
        },
        "markdown.copilot.openAI.azureBaseUrl": {
          "type": "string",
          "default": "",
          "markdownDescription": "%config.openAI.azureBaseUrl.description%"
        },
        "markdown.copilot.openAI.model": {
          "type": "string",
          "enum": [
            "gpt-4o",
            "gpt-4o-2024-05-13",
            "gpt-4o-mini",
            "gpt-4o-mini-2024-07-18",
            "gpt-4-turbo",
            "gpt-4-turbo-2024-04-09",
            "gpt-4-turbo-preview",
            "gpt-4-0125-preview",
            "gpt-4-1106-preview",
            "gpt-4",
            "gpt-4-0613",
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-0125",
            "gpt-3.5-turbo-1106",
            "gpt-3.5-turbo-0613"
          ],
          "default": "gpt-4o",
          "markdownDescription": "%config.openAI.model.description%"
        },
        "markdown.copilot.options.temperature": {
          "type": "number",
          "default": 0.1,
          "minimum": 0,
          "maximum": 1,
          "markdownDescription": "%config.options.temperature.description%"
        }
      }
    },
    "keybindings": [
      {
        "command": "markdown.copilot.editing.indentQuote",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "markdown.copilot.editing.outdentQuote",
        "key": "ctrl+alt+shift+l",
        "mac": "cmd+alt+shift+l",
        "when": "editorTextFocus && editorLangId == markdown && !suggestWidgetVisible"
      }
    ]
  },
  "capabilities": {
    "virtualWorkspaces": {
      "supported": "limited",
      "description": "In virtual workspaces, some features may not work well."
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.91.0",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^2.31.1",
    "eslint": "^8.57.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.5.4",
    "webpack": "^5.93.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@vscode/l10n": "^0.0.18",
    "openai": "^4.53.0"
  }
}
